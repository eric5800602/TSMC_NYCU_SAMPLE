# This is a basic workflow to help you get started with Actions

name: pytest

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Cache python modules
        id: cached-pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ matrix.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ matrix.os }}-pip-
      - if: ${{ steps.cached-pip.outputs.cache-hit == 'false' }}
        name: List the state of pip modules
        continue-on-error: true
        run: |
          pip list            
          
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Import nltk
        run: |
          python -c "import nltk;nltk.download('all')"
      # python -c "import nltk;nltk.download('tokenize')"
      # python -c "import nltk;nltk.download('stopwords')"
      # python -c "import nltk;nltk.download('word_tokenize')"
      # python -c "import nltk;nltk.download('punkt')"
      # Runs a single command using the runners shell
      - name: Run pytest
        run: |
          python -m pytest . tests --doctest-modules --junitxml=test-results.xml --cov-config=.coveragerc --cov=. --cov-report=html
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: htmlcov
